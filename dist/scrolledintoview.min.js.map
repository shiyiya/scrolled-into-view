{"version":3,"file":"scrolledintoview.min.js","sources":["../src/index.js"],"sourcesContent":["class ScrolledIntoViewClass {\r\n  constructor (options) {\r\n    const defaultOption = {\r\n      target: '.into-view',\r\n      intoCallback: null,\r\n      outCallback: null\r\n    }\r\n\r\n    for (let k in defaultOption) {\r\n      if (defaultOption.hasOwnProperty(k) && !options.hasOwnProperty(k)) {\r\n        options[k] = defaultOption[k]\r\n      }\r\n    }\r\n\r\n    this.options = options\r\n    this.targets = document.querySelectorAll(options.target)\r\n\r\n    this.init()\r\n  }\r\n\r\n  init () {\r\n    this.into = new Array(this.targets.length).fill(false)\r\n    if (!window.IntersectionObserver) {\r\n      document.addEventListener('scroll', () => {\r\n        this.observerTarget()\r\n      })\r\n      return\r\n    }\r\n    let observerConfig = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: [0, 1]\r\n    }\r\n    this.observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.intersectionRatio) {\r\n          // in\r\n          // this.observer.unobserve(entry.target)\r\n          const target = entry.target\r\n          this.exparget(target, 1)\r\n        } else {\r\n          // this.observer.unobserve(entry.target)\r\n          this.exparget(entry.target, 0)\r\n        }\r\n      })\r\n    }, observerConfig)\r\n\r\n    this.targets.forEach(target => {\r\n      this.observer.observe(target)\r\n    })\r\n  }\r\n\r\n  observerTarget () {\r\n    const windowinnerHeight = window.innerHeight\r\n\r\n    this.targets.forEach((target, k) => {\r\n      const { top, bottom } = target.getBoundingClientRect()\r\n\r\n      // into view\r\n      if (!this.into[k] && top < windowinnerHeight && top > 0) {\r\n        this.into[k] = true\r\n        this.exparget(target, 1)\r\n      }\r\n\r\n      // out view\r\n      if (\r\n        this.into[k] &&\r\n        ((top > windowinnerHeight && bottom > windowinnerHeight) ||\r\n          (top < 0 && bottom < 0))\r\n      ) {\r\n        this.into[k] = false\r\n        this.exparget(target, 0)\r\n      }\r\n    })\r\n  }\r\n\r\n  exparget (target, key) {\r\n    const callback = [this.options.outCallback, this.options.intoCallback]\r\n\r\n    callback[key] && callback[key](target)\r\n  }\r\n\r\n  destroy () {\r\n    this.observer.disconnect()\r\n  }\r\n}\r\n\r\nexport default function scrolledIntoView (target, intoCallback, outCallback) {\r\n  return new ScrolledIntoViewClass({\r\n    target,\r\n    intoCallback,\r\n    outCallback\r\n  })\r\n}\r\n"],"names":["ScrolledIntoViewClass","options","defaultOption","target","intoCallback","outCallback","k","hasOwnProperty","targets","document","querySelectorAll","init","into","Array","this","length","fill","window","IntersectionObserver","observer","entries","forEach","entry","intersectionRatio","_this","exparget","root","rootMargin","threshold","observe","addEventListener","observerTarget","windowinnerHeight","innerHeight","getBoundingClientRect","top","bottom","_this2","key","callback","disconnect"],"mappings":"uNAAMA,wBACSC,6GACLC,EAAgB,CACpBC,OAAQ,aACRC,aAAc,KACdC,YAAa,UAGV,IAAIC,KAAKJ,EACRA,EAAcK,eAAeD,KAAOL,EAAQM,eAAeD,KAC7DL,EAAQK,GAAKJ,EAAcI,SAI1BL,QAAUA,OACVO,QAAUC,SAASC,iBAAiBT,EAAQE,aAE5CQ,gHAIAC,KAAO,IAAIC,MAAMC,KAAKN,QAAQO,QAAQC,MAAK,GAC3CC,OAAOC,2BAWPC,SAAW,IAAID,qBAAqB,SAAAE,GACvCA,EAAQC,QAAQ,SAAAC,MACVA,EAAMC,kBAAmB,KAGrBpB,EAASmB,EAAMnB,OACrBqB,EAAKC,SAAStB,EAAQ,QAGtBqB,EAAKC,SAASH,EAAMnB,OAAQ,MAdb,CACnBuB,KAAM,KACNC,WAAY,MACZC,UAAW,CAAC,EAAG,UAgBZpB,QAAQa,QAAQ,SAAAlB,GACnBqB,EAAKL,SAASU,QAAQ1B,UAzBtBM,SAASqB,iBAAiB,SAAU,WAClCN,EAAKO,uEA6BHC,EAAoBf,OAAOgB,iBAE5BzB,QAAQa,QAAQ,SAAClB,EAAQG,SACJH,EAAO+B,wBAAvBC,IAAAA,IAAKC,IAAAA,QAGRC,EAAKzB,KAAKN,IAAM6B,EAAMH,GAA2B,EAANG,IAC9CE,EAAKzB,KAAKN,IAAK,EACf+B,EAAKZ,SAAStB,EAAQ,IAKtBkC,EAAKzB,KAAKN,KACF0B,EAANG,GAAoCH,EAATI,GAC1BD,EAAM,GAAKC,EAAS,KAEvBC,EAAKzB,KAAKN,IAAK,EACf+B,EAAKZ,SAAStB,EAAQ,uCAKlBA,EAAQmC,OACVC,EAAW,CAACzB,KAAKb,QAAQI,YAAaS,KAAKb,QAAQG,cAEzDmC,EAASD,IAAQC,EAASD,GAAKnC,0CAI1BgB,SAASqB,6BAIH,SAA2BrC,EAAQC,EAAcC,UACvD,IAAIL,EAAsB,CAC/BG,OAAAA,EACAC,aAAAA,EACAC,YAAAA"}